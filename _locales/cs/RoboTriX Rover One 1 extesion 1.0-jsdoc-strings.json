{
  "Robotrix": "Original code (adapted from):\nKitronikLtd — pxt-kitronik-air-quality\nhttps://github.com/KitronikLtd/pxt-kitronik-air-quality\nLicensed under the MIT License. See https://github.com/KitronikLtd/pxt-kitronik-air-quality/blob/master/LICENSE\n* Modifications by [matej2005], August 2025:\n- CS translations\n- Removed temperature and pressure units for simplicity for kids",
  "Robotrix.RLed.turnOffLED": "Turning off LED",
  "Robotrix.RLed.turnOnLED": "Turning on LED",
  "Robotrix.TurnOnCar": "Inicialises all functions of car.",
  "Robotrix.calcBaselines": "Establish the baseline gas resistance reading and the ambient temperature.\nThese values are required for air quality calculations.",
  "Robotrix.carMoveSimple": "Move in direction",
  "Robotrix.carMoveSimple|param|d": "direction where we want to go, eg: directions2.STRAIGHT",
  "Robotrix.carMoveSimple|param|speedPercent": "speed in percent at with we want to go, eg: 100 or -100 to go in oposite direction",
  "Robotrix.connectUltrasonicDistanceSensor": "Configures the ultrasonic distance sensor and measures continuously in the background.",
  "Robotrix.createLED": "Create a new LED I2C connection / instance",
  "Robotrix.createLED|param|address": "I2C address",
  "Robotrix.enableMotors": "Enable motors function.",
  "Robotrix.getAirQualityPercent": "Return the Air Quality rating as a percentage (0% = Bad, 100% = Excellent).",
  "Robotrix.getAirQualityScore": "Return the Air Quality rating as an IAQ score (500 = Bad, 0 = Excellent).\nThese values are based on the BME688 datasheet, Page 11, Table 6.",
  "Robotrix.getUltrasonicDistance": "Returns the distance to an object in a range from 1 to 300 centimeters or up to 118 inch.\nThe maximum value is returned to indicate when no object was detected.\n-1 is returned when the device is not connected.",
  "Robotrix.getUltrasonicDistanceAll": "Returns the distance to an object in a range from 1 to 300 centimeters or up to 118 inch.\nThe maximum value is returned to indicate when no object was detected.\n-1 is returned when the device is not connected.",
  "Robotrix.isNotObjectDetected": "* @param direction where we want to detect object\n@returns `true` if object is not detected in OBJECT_DETECTED_DISTANCE range. `false` otherwise",
  "Robotrix.isObjectDetected": "* @param direction where we want to detect object\n@returns `true` if object is detected in OBJECT_DETECTED_DISTANCE range. `false` otherwise",
  "Robotrix.isUltrasonicDistanceLessThan": "Returns `true` if an object is within the specified distance. `false` otherwise.\n* @param distance distance to object, eg: 20",
  "Robotrix.measureData": "Run all measurements on the BME688: Temperature, Pressure, Humidity & Gas Resistance.",
  "Robotrix.onUltrasonicObjectDetected": "Do something when an object is detected the first time within a specified range.",
  "Robotrix.onUltrasonicObjectDetected|param|direction": "direction where we want to detect object, eg: SonarDirections.FRONT",
  "Robotrix.onUltrasonicObjectDetected|param|distance": "distance to object, eg: 20",
  "Robotrix.onUltrasonicObjectDetected|param|handler": "body code to run when the event is raised",
  "Robotrix.readHumidity": "Read Humidity from the sensor as a number.\nHumidity is output as a percentage.",
  "Robotrix.readPressure": "Read Pressure from the sensor as a number.\nUnits for pressure are in Pa (Pascals).",
  "Robotrix.readTemperature": "Read Temperature from the sensor as a number.\nUnits for temperature are in °C (Celsius).",
  "Robotrix.readeCO2": "Read eCO2 from sensor as a Number (250 - 40000+ppm).\nUnits for eCO2 are in ppm (parts per million).",
  "Robotrix.setUltrasonicSensorsMode": "Set sonar operating mode",
  "Robotrix.setUltrasonicSensorsMode|param|mode": "distance to object, eg: SonarModes.FAST",
  "Robotrix.setupGasSensor": "Setup the gas sensor ready to measure gas resistance.",
  "Robotrix.startMoving": "* @param direction where we want to detect object\n@returns `true` if object is not detected in OBJECT_DETECTED_DISTANCE range. `false` otherwise",
  "Robotrix.stop": "Stop all movement of motors",
  "Robotrix.test": "Otestuje vybrané moduly"
}